[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! My name is Tales Gomes a Computer Engineer from Brazil 🇧🇷.\nI’m a data analyst certified by Datacamp."
  },
  {
    "objectID": "posts/bike-share-navigate/index.html",
    "href": "posts/bike-share-navigate/index.html",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "",
    "text": "You are a junior data analyst working in the marketing analyst team at Cyclistic, a bike-share company in Chicago. The director of marketing believes the company’s future success depends on maximizing the number of annual memberships. Therefore, your team wants to understand how casual riders and annual members use Cyclistic bikes differently. From these insights, your team will design a new marketing strategy to convert casual riders into annual members. But first, Cyclistic executives must approve your ecommendations, so they must be backed up with compelling data insights and professional data visualizations."
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#scenario",
    "href": "posts/bike-share-navigate/index.html#scenario",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "",
    "text": "You are a junior data analyst working in the marketing analyst team at Cyclistic, a bike-share company in Chicago. The director of marketing believes the company’s future success depends on maximizing the number of annual memberships. Therefore, your team wants to understand how casual riders and annual members use Cyclistic bikes differently. From these insights, your team will design a new marketing strategy to convert casual riders into annual members. But first, Cyclistic executives must approve your ecommendations, so they must be backed up with compelling data insights and professional data visualizations."
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#ask-phase",
    "href": "posts/bike-share-navigate/index.html#ask-phase",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Ask Phase",
    "text": "Ask Phase\nGuiding questions\n\nWhat is the problem you are trying to solve?\n\nHow do annual members and casual riders use Cyclistic bikes differently?\nWhy would casual riders buy Cyclistic annual memberships?\nHow can Cyclistic use digital media to influence casual riders to become members?\n\nHow can your insights drive business decisions?\n\nimprove the marketing campaign\n\nIdentify the business task\n\nUndertand the diferente between casual users and members to improve the marketing campaign\n\nConsider key stakeholders\n\nMain stakeholders:\n\nCyclistic executive team\nLily Moreno\n\nSecundary stakeholder:\n\nCyclistic marketing analytics team leader"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#prepare",
    "href": "posts/bike-share-navigate/index.html#prepare",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Prepare",
    "text": "Prepare\n\nWhere is your data located?\n\nCyclistic bikeshare database\n\nHow is the data organized?\n\nthe data base is organized in 12 files with month data from july 2020 to june 2021.\n\nAre there issues with bias or credibility in this data?\n\nReliable -Yes, the data is reliable. The data is a primary source data based on a fictional company.\nOriginal - Yes, the original public data can be located.\nComprehensive - Yes, no vital information is missing.\nCurrent - Yes, the data base is updated monyhly.\n\nHow are you addressing licensing, privacy, security, and accessibility?\n\nthe data is distributed in this license.\n\nHow did you verify the data’s integrity?\n\nUsing R (ver. 4.1) and Rstudio (ver. 1.4)\n\nHow does it help you answer your question?\n\nR is a powerful tool that makes it easy to manipulate large databases.\n\nAre there any problems with the data?\n\nYes, Some missing values, but it did not interfere with the analysis."
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#process-phases",
    "href": "posts/bike-share-navigate/index.html#process-phases",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Process Phases",
    "text": "Process Phases\n\nIngesting the data\n\nIngesting the data using the vroom library and loading into the bikeshare_data.\n\n\n\nCode\nlibrary(tidyverse) # used to filter the data\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(lubridate) #used to work with date class. \n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nCode\nlibrary(Hmisc)\n\n\nCarregando pacotes exigidos: lattice\n\n\nCarregando pacotes exigidos: survival\n\n\nCarregando pacotes exigidos: Formula\n\n\n\nAttaching package: 'Hmisc'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\n\nCode\nlibrary(kableExtra)\n\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\nCode\n#loding the files name and \nfiles &lt;- fs::dir_ls(path = \"database/\")\nfiles\n\n\ndatabase/202007-divvy-tripdata.csv database/202008-divvy-tripdata.csv \ndatabase/202009-divvy-tripdata.csv database/202010-divvy-tripdata.csv \ndatabase/202011-divvy-tripdata.csv database/202012-divvy-tripdata.csv \ndatabase/202101-divvy-tripdata.csv database/202102-divvy-tripdata.csv \ndatabase/202103-divvy-tripdata.csv database/202104-divvy-tripdata.csv \ndatabase/202105-divvy-tripdata.csv database/202106-divvy-tripdata.csv \n\n\nCode\nbikeshare_data &lt;- vroom::vroom(files,\n                               col_names = TRUE)\n\n\nRows: 4460151 Columns: 13\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\ndbl  (4): start_lat, start_lng, end_lat, end_lng\ndttm (2): started_at, ended_at\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nglimpse(bikeshare_data)\n\n\nRows: 4,460,151\nColumns: 13\n$ ride_id            &lt;chr&gt; \"762198876D69004D\", \"BEC9C9FBA0D4CF1B\", \"D2FD8EA432…\n$ rideable_type      &lt;chr&gt; \"docked_bike\", \"docked_bike\", \"docked_bike\", \"docke…\n$ started_at         &lt;dttm&gt; 2020-07-09 15:22:02, 2020-07-24 23:56:30, 2020-07-…\n$ ended_at           &lt;dttm&gt; 2020-07-09 15:25:52, 2020-07-25 00:20:17, 2020-07-…\n$ start_station_name &lt;chr&gt; \"Ritchie Ct & Banks St\", \"Halsted St & Roscoe St\", …\n$ start_station_id   &lt;chr&gt; \"180\", \"299\", \"329\", \"181\", \"268\", \"635\", \"113\", \"2…\n$ end_station_name   &lt;chr&gt; \"Wells St & Evergreen Ave\", \"Broadway & Ridge Ave\",…\n$ end_station_id     &lt;chr&gt; \"291\", \"461\", \"156\", \"94\", \"301\", \"289\", \"140\", \"31…\n$ start_lat          &lt;dbl&gt; 41.90687, 41.94367, 41.93259, 41.89076, 41.91172, 4…\n$ start_lng          &lt;dbl&gt; -87.62622, -87.64895, -87.63643, -87.63170, -87.626…\n$ end_lat            &lt;dbl&gt; 41.90672, 41.98404, 41.93650, 41.91831, 41.90799, 4…\n$ end_lng            &lt;dbl&gt; -87.63483, -87.66027, -87.64754, -87.63628, -87.631…\n$ member_casual      &lt;chr&gt; \"member\", \"member\", \"casual\", \"casual\", \"member\", \"…\n\n\n\n\nVerifing missing values\n\n\nCode\nbikeshare_data |&gt;\n  is.na() |&gt;\n  colSums()\n\n\n           ride_id      rideable_type         started_at           ended_at \n                 0                  0                  0                  0 \nstart_station_name   start_station_id   end_station_name     end_station_id \n            282068             282694             315109             315570 \n         start_lat          start_lng            end_lat            end_lng \n                 0                  0               5286               5286 \n     member_casual \n                 0 \n\n\nThe missing data are grouped at the location variable (station name, latitude and longitude)\n\n\nfiltering the data\n\nFiltering and Process the data using the tools in the tidyverse.\n\nIn this fase we created the following variables:\n\ntrip_duration - the trip duration in minutes;\nweekday_day - The day of the week the trip takes place;\nis_weekend - Test if the day is a weekend;\ndate_month - Stores the month the trip takes place;\ndate_hour - Stores the hour the trip takes place;\ndate_season - Stores the season of the year;\nday_time - Stores the time of the day;\ntrip_route - Stores the route of the trip (start station to end station).\n\nThen we keep the following variable:\n\nstart_station_name;\nride_id;\nrideable_type;\nand member_casual.\n\nthe we exclude the remaning original variables.\nthen we change the class of the categorical variables to factor.\nAnd finally, we filter the data to contain only trip duration longer than 0 minutes.\n\n\nI chose not to exclude missing values due to being limited to location variables (station names and geographic markers), as well as excluding trips shorter than two minutes to minimize data collection errors.\n\n\nCode\n#Filterring data.\nbikeshare_data &lt;- bikeshare_data |&gt;\n  mutate(trip_duration = as.numeric(ended_at - started_at)/60, \n         weekday_day = wday(started_at, label = TRUE), \n         is_weekend = ifelse((wday(started_at)==7 | \n                              wday(started_at)==1), \"yes\", \"no\"), \n         date_month = month(started_at, label = TRUE), \n         date_hour = hour(started_at), \n         date_season = case_when( \n           month(started_at) == 1 | month(started_at) == 2 | month(started_at) == 3 ~ \"winter\",\n           month(started_at) == 4 | month(started_at) == 5 | month(started_at) == 6 ~ \"spring\",\n           month(started_at) == 7 | month(started_at) == 8 | month(started_at) == 9 ~ \"summer\",\n           month(started_at) == 10 | month(started_at) == 11 | month(started_at) == 12 ~ \"fall\"),\n         day_time = case_when( \n           hour(started_at) &lt; 6 ~ \"dawn\",\n           hour(started_at) &gt;=6 & hour(started_at) &lt; 12 ~ \"morning\",\n           hour(started_at) &gt;= 12 & hour(started_at) &lt; 18 ~ \"afternoon\",\n           hour(started_at) &gt;= 18 ~ \"night\"),\n         trip_route = str_c(start_station_name, end_station_name, sep = \" to \")) |&gt; \n  relocate(start_station_name, .before = trip_route) |&gt; \n  select(-(started_at:end_lng)) |&gt; \n  mutate(is_weekend = factor(is_weekend,\n                             levels = c(\"yes\", \"no\"),\n                             ordered = TRUE),\n         rideable_type = factor(rideable_type,\n                                levels = c(\"docked_bike\", \"electric_bike\", \"classic_bike\"),\n                                ordered = TRUE),\n         member_casual = factor(member_casual,\n                                levels = c(\"member\", \"casual\"),\n                                ordered = TRUE),\n         date_season = factor(date_season,\n                              levels = c(\"winter\", \"spring\", \"summer\", \"fall\"),\n                              ordered = TRUE),\n         date_hour = factor(date_hour,\n                            levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n                                       12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23),\n                            ordered = TRUE),\n         day_time = factor(day_time, levels = c(\"dawn\", \"morning\", \"afternoon\", \"night\"),\n                           ordered = TRUE)) |&gt;\n  filter(trip_duration &gt; 2) # Only taking in account trips Higher than 2 minutes\n\n\n\nChecking the data\n\n\n\nCode\nglimpse(bikeshare_data)\n\n\nRows: 4,335,006\nColumns: 12\n$ ride_id            &lt;chr&gt; \"762198876D69004D\", \"BEC9C9FBA0D4CF1B\", \"D2FD8EA432…\n$ rideable_type      &lt;ord&gt; docked_bike, docked_bike, docked_bike, docked_bike,…\n$ member_casual      &lt;ord&gt; member, member, casual, casual, member, casual, mem…\n$ trip_duration      &lt;dbl&gt; 3.833333, 23.783333, 7.250000, 20.933333, 5.133333,…\n$ weekday_day        &lt;ord&gt; qui, sex, qua, sex, sáb, ter, qui, seg, qui, seg, s…\n$ is_weekend         &lt;ord&gt; no, no, no, no, yes, no, no, no, no, no, no, no, no…\n$ date_month         &lt;ord&gt; jul, jul, jul, jul, jul, jul, jul, jul, jul, jul, j…\n$ date_hour          &lt;ord&gt; 15, 23, 19, 19, 10, 16, 11, 16, 11, 18, 15, 18, 9, …\n$ date_season        &lt;ord&gt; summer, summer, summer, summer, summer, summer, sum…\n$ day_time           &lt;ord&gt; afternoon, night, night, night, morning, afternoon,…\n$ start_station_name &lt;chr&gt; \"Ritchie Ct & Banks St\", \"Halsted St & Roscoe St\", …\n$ trip_route         &lt;chr&gt; \"Ritchie Ct & Banks St to Wells St & Evergreen Ave\"…"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#analyse-phase",
    "href": "posts/bike-share-navigate/index.html#analyse-phase",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Analyse Phase",
    "text": "Analyse Phase\n\nFirst, we analyze the data broadly to see patterns, then group it by user type to see differences.\n\n\n\nCode\n#Using Hmisc package\n\nbikeshare_summary &lt;- bikeshare_data |&gt;\n  select(-c(ride_id, start_station_name, trip_route)) |&gt;\n  describe(descript = \"Statistical Description Summary\", tabular = TRUE)\n\nhtml(bikeshare_summary, exclude1=TRUE, align= \"c\", scroll = TRUE, rows = 50)\n\n\n\n  \n\n\n Statistical Description Summary  9  Variables   4335006  Observations  rideable_type \n \n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n3\n\n\n\n Value        docked_bike electric_bike  classic_bike\n Frequency        1998627       1089217       1247162\n Proportion         0.461         0.251         0.288\n \n\nmember_casual\n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n2\n\n\n\n Value       member  casual\n Frequency  2447344 1887662\n Proportion   0.565   0.435\n \n\ntrip_duration\n\n\n\n\n\n\nn\nmissing\ndistinct\nInfo\nMean\nGmd\n.05\n.10\n.25\n.50\n.75\n.90\n.95\n\n\n4335006\n0\n26642\n1\n26.97\n31.23\n3.767\n4.917\n7.967\n14.083\n25.633\n44.717\n69.700\n\n\n\n\n\n\nlowest :\n2.016667\n2.033333\n2.050000\n2.066667\n2.083333\n\n\nhighest:\n52701.383333\n53921.600000\n54283.350000\n55691.683333\n55944.150000\n\n\n\n\nweekday_day\n\n\n\n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n7\n\n\n\nlowest : dom seg ter qua qui , highest: ter qua qui sex sáb\n Value         dom    seg    ter    qua    qui    sex    sáb\n Frequency  671449 531050 552165 587617 560207 637677 794841\n Proportion  0.155  0.123  0.127  0.136  0.129  0.147  0.183\n \n\nis_weekend\n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n2\n\n\n\n Value          yes      no\n Frequency  1466290 2868716\n Proportion   0.338   0.662\n \n\ndate_month\n\n\n\n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n12\n\n\n\nlowest : jan fev mar abr mai , highest: ago set out nov dez\n Value         jan    fev    mar    abr    mai    jun    jul    ago    set    out\n Frequency   93893  48012 222701 328578 516940 709441 540120 604137 516748 375308\n Proportion  0.022  0.011  0.051  0.076  0.119  0.164  0.125  0.139  0.119  0.087\n                         \n Value         nov    dez\n Frequency  251678 127450\n Proportion  0.058  0.029\n \n\ndate_hour\n\n\n\n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n24\n\n\n\nlowest : 0 1 2 3 4 , highest: 19 20 21 22 23\n\ndate_season\n\n\n\n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n4\n\n\n\n Value       winter  spring  summer    fall\n Frequency   364606 1554959 1661005  754436\n Proportion   0.084   0.359   0.383   0.174\n \n\nday_time\n\n\n\n\n\n\nn\nmissing\ndistinct\n\n\n4335006\n0\n4\n\n\n\n\n  Value           dawn   morning afternoon     night\n Frequency     161392    968698   1988751   1216165\n Proportion     0.037     0.223     0.459     0.281\n \n  \n\n\n\n\nCode\nsize &lt;- nrow(bikeshare_data)\n\nbikeshare_data |&gt;\n  group_by(date_hour) |&gt;\n  summarise(percent = round((n() / size) * 100, 2)) |&gt;\n  arrange(desc(percent)) |&gt;\n  kable(caption = \"Total percent usage by the hour of the day\") |&gt; \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE,\n    \n    position = \"center\",\n    fixed_thead = TRUE\n  )|&gt;\n  scroll_box(width = \"100%\", height = \"500px\")\n\n\n\n\n\nTotal percent usage by the hour of the day\n\n\ndate_hour\npercent\n\n\n\n\n17\n10.24\n\n\n18\n9.01\n\n\n16\n8.57\n\n\n15\n7.34\n\n\n14\n6.75\n\n\n19\n6.66\n\n\n13\n6.58\n\n\n12\n6.40\n\n\n11\n5.39\n\n\n20\n4.56\n\n\n10\n4.21\n\n\n8\n3.88\n\n\n9\n3.61\n\n\n7\n3.35\n\n\n21\n3.21\n\n\n22\n2.64\n\n\n23\n1.98\n\n\n6\n1.91\n\n\n0\n1.27\n\n\n1\n0.82\n\n\n5\n0.68\n\n\n2\n0.46\n\n\n3\n0.25\n\n\n4\n0.24\n\n\n\n\n\n\n\n\n\nAnalyzing the data generated by the “describe” function we can infer that:\n\nRegarding the type of bikes, “classic_bike” is more than 41% of all trips, followed by “eletric_bike” with 31% and “docked_bike” with 28%;\nRegarding to the type of user, “member” represents 55% while “casual” represents 45%;\nRegarding to the day, “weekend” represents 33% of the races with a peak on Saturday and a minimum on Monday;\nRegarding the time of day, it can be observed that the peak occurs at 17, 18 and 16 hours. The races decrease from afternoon, night, morning, until dawn.\nRegarding to the month and season, the values decrease from summer,fall, spring to winter. With the busiest months being August, July, September and Octuber and the least busy months being February, January and March;\nRegarding to the duration of the trip, the average duration is 24.26 minutes.\n\n\n\n\nCode\nbikeshare_skim_member &lt;- bikeshare_data |&gt; \n  select(-c(ride_id, start_station_name, trip_route)) |&gt;\n  group_by(member_casual) |&gt; \n  skimr::skim() |&gt;\n  as_tibble()\n  \n\nbikeshare_skim_member |&gt;\n  skimr::yank(\"numeric\") |&gt;\n  as_tibble() |&gt;\n  kable(caption = \"Trip duration difference between Casual users and members\") |&gt; \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), \n    full_width = FALSE,\n    position = \"center\",\n    fixed_thead = TRUE\n  )\n\n\n\n\nTrip duration difference between Casual users and members\n\n\nskim_variable\nmember_casual\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ntrip_duration\nmember\n0\n1\n15.59300\n56.60104\n2.016667\n6.566667\n11.13333\n19.13333\n33421.37\n▇▁▁▁▁\n\n\ntrip_duration\ncasual\n0\n1\n41.72614\n364.67240\n2.016667\n11.033333\n19.70000\n37.00000\n55944.15\n▇▁▁▁▁\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_skim_member |&gt;\n  skimr::yank(\"factor\") |&gt;\n  as_tibble() |&gt;\n  kable(caption = \"Behavior difference of Members and Casual users\") |&gt; \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), \n    full_width = FALSE, \n    position = \"center\",\n    fixed_thead = TRUE\n  )|&gt;\n    scroll_box(width = \"100%\", height = \"500px\")\n\n\n\n\n\nBehavior difference of Members and Casual users\n\n\nskim_variable\nmember_casual\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nrideable_type\nmember\n0\n1\nTRUE\n3\ndoc: 1043233, cla: 801776, ele: 602335\n\n\nrideable_type\ncasual\n0\n1\nTRUE\n3\ndoc: 955394, ele: 486882, cla: 445386\n\n\nweekday_day\nmember\n0\n1\nTRUE\n7\nqua: 376862, sáb: 364031, sex: 362687, ter: 352671\n\n\nweekday_day\ncasual\n0\n1\nTRUE\n7\nsáb: 430810, dom: 359087, sex: 274990, qua: 210755\n\n\nis_weekend\nmember\n0\n1\nTRUE\n2\nno: 1770951, yes: 676393\n\n\nis_weekend\ncasual\n0\n1\nTRUE\n2\nno: 1097765, yes: 789897\n\n\ndate_month\nmember\n0\n1\nTRUE\n12\njun: 347389, ago: 321421, set: 291435, jul: 274564\n\n\ndate_month\ncasual\n0\n1\nTRUE\n12\njun: 362052, ago: 282716, jul: 265556, mai: 251400\n\n\ndate_hour\nmember\n0\n1\nTRUE\n24\n17: 259615, 18: 225538, 16: 209711, 15: 169696\n\n\ndate_hour\ncasual\n0\n1\nTRUE\n24\n17: 184196, 18: 164941, 16: 161847, 15: 148366\n\n\ndate_season\nmember\n0\n1\nTRUE\n4\nsum: 887420, spr: 807456, fal: 497998, win: 254470\n\n\ndate_season\ncasual\n0\n1\nTRUE\n4\nsum: 773585, spr: 747503, fal: 256438, win: 110136\n\n\nday_time\nmember\n0\n1\nTRUE\n4\naft: 1094519, mor: 649860, nig: 635991, daw: 66974\n\n\nday_time\ncasual\n0\n1\nTRUE\n4\naft: 894232, nig: 580174, mor: 318838, daw: 94418\n\n\n\n\n\n\n\n\n\nRegarding the difference in usage between members and casual users, we can observe the following:\n\nThe trip duration is 2,45 times longer for casual users than members. Averaging 36.15 min for casual users and 14.71 min for members;\nRegarding the type of bicycle, the most used for members, in descending order, are “classic”, “eletric”, and “docked”. For casual users they are “classic”, “docked” and “eletric”;\nRegarding the time of year, both users follow the general average with a peak in summer and less use in winter, however for casual users spring is busier than fall;\nThe busiest member months are August, September and July. For casual users, the busiest months are July, August and September;\nRegarding the day of the week, the busiest days for members, in descending order, are Wednesday, Thursday and Friday. For casual users, the busiest days are Saturday, Sunday and Friday. With greater usage of the service on weekends for casual members compared to members;\nRegarding the time of day both types of users have more runs in the afternoon, however in casual members the night is busier than in the morning.\n\nThe Stations and routes more often used are the following:\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(start_station_name) |&gt; \n  summarise(number_of_trips = n()) |&gt;\n  arrange(-number_of_trips) |&gt; \n  drop_na(start_station_name) |&gt; \n  slice(1:10) |&gt;\n  kable(caption = \"Top 10 most popular station\") |&gt; \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE,\n    position = \"center\",\n    fixed_thead = TRUE\n  )\n\n\n\n\nTop 10 most popular station\n\n\nstart_station_name\nnumber_of_trips\n\n\n\n\nStreeter Dr & Grand Ave\n56823\n\n\nLake Shore Dr & Monroe St\n42821\n\n\nTheater on the Lake\n38780\n\n\nClark St & Elm St\n37840\n\n\nLake Shore Dr & North Blvd\n37282\n\n\nMillennium Park\n33622\n\n\nMichigan Ave & Oak St\n33259\n\n\nWells St & Concord Ln\n32843\n\n\nWells St & Elm St\n29163\n\n\nClark St & Armitage Ave\n28876\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(trip_route) |&gt; \n  summarise(number_of_trips = n()) |&gt;\n  arrange(-number_of_trips) |&gt; \n  drop_na(trip_route) |&gt; \n  slice(1:10) |&gt;\n  kable(caption = \"Top 10 most popular route\") |&gt; \n   kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE,\n    position = \"center\",\n    fixed_thead = TRUE\n  )\n\n\n\n\nTop 10 most popular route\n\n\ntrip_route\nnumber_of_trips\n\n\n\n\nStreeter Dr & Grand Ave to Streeter Dr & Grand Ave\n9484\n\n\nLake Shore Dr & Monroe St to Lake Shore Dr & Monroe St\n8596\n\n\nMillennium Park to Millennium Park\n6436\n\n\nBuckingham Fountain to Buckingham Fountain\n5775\n\n\nMichigan Ave & Oak St to Michigan Ave & Oak St\n5563\n\n\nIndiana Ave & Roosevelt Rd to Indiana Ave & Roosevelt Rd\n4683\n\n\nFort Dearborn Dr & 31st St to Fort Dearborn Dr & 31st St\n4514\n\n\nTheater on the Lake to Theater on the Lake\n4301\n\n\nLake Shore Dr & Monroe St to Streeter Dr & Grand Ave\n3913\n\n\nMichigan Ave & 8th St to Michigan Ave & 8th St\n3853"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#share-phase",
    "href": "posts/bike-share-navigate/index.html#share-phase",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Share Phase",
    "text": "Share Phase\n\nBy the hour and the time of the day\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, date_hour) |&gt; \n  summarise(n_trip = n(), .groups = 'drop') |&gt;\n  ggplot(aes(x= date_hour, y = n_trip, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual)) + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc()+\n  labs(\n    title = \"Number of trips by the hour of the day\",\n    color = \"Type of user\",\n    fill = \"Type of user\",\n    x = \"hour of the day\",\n    y = \"Number of trips (in Thousands)\"\n    )   \n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, date_hour) |&gt; \n  summarise(mean_trip = mean(trip_duration), .groups = 'drop') |&gt;\n  ggplot(aes(x= date_hour, y = mean_trip, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by he hour of the day\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"hour of the day\",\n      y = \"Trip duration (min)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, day_time) |&gt; \n  summarise(n_trip = n(), .groups = 'drop') |&gt;\n  ggplot(mapping = aes(day_time, n_trip)) +  \n  geom_col(aes(color = member_casual, fill = member_casual), position = \"dodge2\")+\n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(limits = c(0,2000000), n.breaks = 10,labels = scales::unit_format(unit = \"MM\", scale = 1e-6)) +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the time of the day\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"Time of the day\",\n      y = \"Number of trips (in Millions)\"\n    )   \n\n\n\n\n\n\n\n\n\n\n\nBy Month and Season\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, date_month) |&gt; \n  summarise(n_trip = n(), .groups = 'drop') |&gt;\n  ggplot(aes(x= date_month, y = n_trip, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual)) + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the months and type of user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"Month of the year\",\n      y = \"Number of trips (in Thousands)\"\n    )  \n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, date_month) |&gt; \n  summarise(mean_duration = mean(trip_duration), .groups = 'drop') |&gt;\n  ggplot(aes(x= date_month, y = mean_duration, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Trip duration by the Months and type of user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"hour of the day\",\n      y = \"Trip duration (min)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, date_season) |&gt;\n  summarise(n_trip = n(), .groups = \"drop\") |&gt;\n  ggplot(mapping = aes(date_season, n_trip)) + \n  geom_col(aes(color = member_casual, fill = member_casual), position = \"dodge2\") +\n  scale_y_continuous(n.breaks = 10,labels = scales::unit_format(unit = \"MM\", scale = 1e-6)) +\n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by seasons and type of user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"season of the year\",\n      y = \"Number of trips (in Millions)\"\n    )  \n\n\n\n\n\n\n\n\n\n\n\nBy type of the bike\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, rideable_type) |&gt; \n  summarise(n_trip = n(), .groups = \"drop\") |&gt;\n  ggplot(mapping = aes(rideable_type, n_trip)) +  \n  geom_col(aes(color = member_casual, fill = member_casual), position = \"dodge2\")+\n  scale_y_continuous(n.breaks = 10,labels = scales::unit_format(unit = \"MM\", scale = 1e-6)) +\n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the type of the bike and user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"type of the bike\",\n      y = \"Number of trips (in Millions)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, rideable_type, date_hour) |&gt;\n  summarise(n_trip = n(), .groups = 'drop') |&gt;\n  ggplot(aes(x= date_hour, y = n_trip, color = rideable_type, group = interaction(member_casual, rideable_type))) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc() +\n  labs(\n      title = \"Number of trips by the hour of the day, type of bike and type of user\",\n      color = \"Type of bike\",\n      fill = \"Type of bike\",\n      x = \"hour of the day\",\n      y = \"Number of trips (in Thousands)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, rideable_type, date_hour) |&gt; \n  summarise(mean_duration = mean(trip_duration), .groups = 'drop') |&gt;\n  ggplot(aes(x= date_hour, y = mean_duration, color = rideable_type, group = interaction(member_casual, rideable_type))) +  \n  geom_line() +\n  geom_point() +\n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc() +\n  labs(\n      title = \"Duration of the trips by the type of the bike\",\n      color = \"Type of bike\",\n      fill = \"Type of bike\",\n      x = \"hour of the day\",\n      y = \"Trip duration (min)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(member_casual, rideable_type, date_month) |&gt; \n  summarise(n_trip = n(), .groups = 'drop') |&gt;\n  ggplot(aes(x= date_month, y = n_trip, color = rideable_type, group = interaction(member_casual, rideable_type))) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the months\",\n      color = \"Type of bike\",\n      fill = \"Type of bike\",\n      x = \"Month of the year\",\n      y = \"No. of trips (in Thousands)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nStations and the Routs more offen used\n\n\nCode\nbikeshare_data |&gt; \n  group_by(start_station_name) |&gt; \n  summarise(n_trip = n()) |&gt;\n  arrange(-n_trip) |&gt; \n  drop_na(start_station_name) |&gt; \n  slice(1:10) |&gt; \n  ggplot(mapping = aes(fct_reorder(start_station_name, -n_trip), n_trip)) +  \n  geom_col(aes(color = n_trip, fill = n_trip), position = \"dodge2\")+\n  coord_flip()+\n  ggthemes::scale_color_continuous_tableau(palette = \"Blue\") +\n  ggthemes::scale_fill_continuous_tableau(palette = \"Blue\") +\n  ggthemes::theme_hc()+\n\n  theme(legend.position=\"none\")+\n  labs(\n    title = \"10 most used start point\",\n    x = \"\",\n    y = \"\"\n    )   \n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |&gt; \n  group_by(trip_route) |&gt; \n  summarise(n_trip = n()) |&gt;\n  arrange(-n_trip) |&gt; \n  drop_na(trip_route) |&gt; \n  slice(1:10) |&gt; \n  ggplot(mapping = aes(fct_reorder(trip_route, -n_trip), n_trip)) +  \n  geom_col(aes(color = n_trip, fill = n_trip), position = \"dodge2\")+\n  coord_flip()+\n  ggthemes::scale_color_continuous_tableau(palette = \"Blue\") +\n  ggthemes::scale_fill_continuous_tableau(palette = \"Blue\") +\n  ggthemes::theme_hc()+\n  theme(legend.position=\"none\")+\n  labs(\n    title = \"Top 10 Routes\",\n    x = \"\",\n    y = \"\"\n  )"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#act",
    "href": "posts/bike-share-navigate/index.html#act",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Act",
    "text": "Act\n\nKey findings\n\nDifferent of members, casual user use service more often during the weekend;\nAlso have the mean duration of the trips 2,45 times longer than members;\nThey have the highest trip duration during dawn (from 12 am to 5 am). With the pic at 2 am;\nCasual users use the service more from July to October;\nAlthough February is the month with the least trips, it is also the month with the longest duration of trips;\nCasual members use more docked bikes thans members and also have a longer average travel time for this type of bike.\n\n\n\nRecommendations\n\nCreate a subscription based on time-of-day to encourage casual users that ride, for exemple, from 9 pm to 5 am to subscribe;\nImplement discounts or a points system based on loyalty (frequency of use) and high trip-duration users;\nCreate seasonal subscriptions such as summer and spring. Or implement discounts on temporary subscriptions (3, 6, 9, 12 months);\nCreate subscription especific to ride on week day or on the weekend;\nCreate subscriptions for specific types of bicycles. Plans to use only docked bicycles, for example."
  },
  {
    "objectID": "posts/bellabeat/index.html",
    "href": "posts/bellabeat/index.html",
    "title": "Análise de uso bellabets",
    "section": "",
    "text": "Neste projeto procuro encontrar tendências de uso em um banco de dados que contém dados de 33 usuários, provenientes do Fitibit, um fitness tracker da Bellabeats."
  },
  {
    "objectID": "posts/bellabeat/index.html#objetivo-da-análise",
    "href": "posts/bellabeat/index.html#objetivo-da-análise",
    "title": "Análise de uso bellabets",
    "section": "",
    "text": "Neste projeto procuro encontrar tendências de uso em um banco de dados que contém dados de 33 usuários, provenientes do Fitibit, um fitness tracker da Bellabeats."
  },
  {
    "objectID": "posts/bellabeat/index.html#preparação-e-processamento-dos-dados",
    "href": "posts/bellabeat/index.html#preparação-e-processamento-dos-dados",
    "title": "Análise de uso bellabets",
    "section": "Preparação e processamento dos dados",
    "text": "Preparação e processamento dos dados\n\n\nCode\n# Carregamento bibliotecas ------------------------------------------------\n\nlibrary(tidyverse)\nlibrary(patchwork)\n\n\n# Definindo thema ggplot2 ------------------------------------------------\n\ntheme_set(ggpubr::theme_pubclean())\n\n# Tratamento dos Dados diários --------------------------------------------------------------\n\n#Lendo o arquivos com dados diários e gravando em variáveis.\n#No processo está sendo limpo os nomes das variáveis para remoção de espaços e\n#letras maiúsculas. Bem como alterando o tipo da coluna que contem as datas\n#de todas as tabelas diárias\n\n#Lendo dados de \"dailyActivity_merged.csv\" e limpando os nomes das variáveis\ndaily_activity &lt;- \"bellabeat_data/dailyActivity_merged.csv\" |&gt; \n  data.table::fread(sep = ',') |&gt; \n  janitor::clean_names()\n#transformando a coluna de \"activity_date\" de string para o tipo data.\n#alterando o nome da coluna \"activity_date\" para \"date\"\ndaily_activity &lt;- daily_activity |&gt; \n  mutate(activity_date = lubridate::mdy(activity_date),\n         date = lubridate::date(activity_date)) |&gt; \n  select(-activity_date)\n\n\n#Lendo dados de \"sleepDay_merged.csv\" e limpando os nomes das variáveis\ndaily_sleep &lt;- \"bellabeat_data/sleepDay_merged.csv\" |&gt; \n  data.table::fread(sep = ',') |&gt;\n  janitor::clean_names()\n#transformando a coluna de \"sleep_day\" de string para o tipo data.\n#alterando o nome da coluna \"sleep_day\" para \"date\"\ndaily_sleep &lt;- daily_sleep |&gt; \n  mutate(sleep_day = lubridate::mdy_hms(sleep_day),\n         date = lubridate::date(sleep_day)) |&gt; \n  select(-sleep_day)\n\n\n#Lendo dados de \"heartrate_seconds_merged.csv\" e limpando os nomes das variáveis\nheartrate &lt;- \"bellabeat_data/heartrate_seconds_merged.csv\" |&gt; \n  data.table::fread(sep = ',') |&gt;\n  janitor::clean_names()\n#transformando a coluna de \"time\" de string para o tipo data.\n#alterando o nome da coluna \"time\" para \"date\"\nheartrate &lt;- heartrate |&gt; \n  mutate(time = lubridate::mdy_hms(time),\n         date = lubridate::date(time)) |&gt;\n  select(-time) |&gt; \n  with_groups(c(id, date), summarise, heartrate = mean(value))\n#Na linha acima é feita a transformação dos valores\n#em segundos para valores diários\n\n\n#Lendo dados de \"heartrate_seconds_merged.csv\" e limpando os nomes das variáveis\nweight_log &lt;- \"bellabeat_data/weightLogInfo_merged.csv\" |&gt; \n  data.table::fread(sep = ',') |&gt;\n  janitor::clean_names()\n#transformando a coluna de \"date\" de string para o tipo data.\nweight_log &lt;- weight_log |&gt; \n  mutate(date = lubridate::mdy_hms(date),\n         date = lubridate::date(date))\n\n\n\nDescrição dos dados\nSerá utilizado o banco de dados do fitibit do kaggle, o qual é composto por 18 planilhas contendo dados de atividades, passos, calorias, sono e batimento cardíaco de uma lista de usuários que consentiram em compartilhar informações. O banco de dados está sob a licença CC0: Public Domain. Sendo que para esta tarefa especifica foi escolhido trabalhar com dados diários fornecidos pelos usuários, sendo utilizadas seguintes as tabelas:\n\n“dailyActivity_merged” que contém dados de atividades diárias, como distância percorrida, passos, calorias gastas, tempo sedentário e de atividades leves, moderadas ou avançadas;\n“sleepDay_merged” que contém informações de quantidade de sono, tempo na deitado cama e número de eventos de sono;\n“heartrate_seconds_merged” que contém o registro dos batimentos cardíacos dos usuários por segundo;\n“weightLogInfo_merged” que contém informações sobre peso, índice de massa corporal e percentual de gordura corporal.\n\n\n\nDescrição da processo de limpeza dos dados\nPara desempenhar esta análise foi escolhido a linguagem de programação R e para o tratamento de dados foram seguidos os seguintes passos:\n\nTodas as tabelas foram carregadas no plataforma;\nEm cada tabela a coluna responsável pelo armazenamento da data do registro foi alterada do tipo string para o tipo data, tendo seus nomes alterados para “date” afim de facilitar a manipulação dos dados;\nNa tabela “heartrate_seconds_merged” foi alterada a escala temporal de segundos para diário e calculado a média de batimentos cardíacos por dia;\nFoi feita a união das tabelas através de uma left-join entre a tabela “dailyActivity_merged” e as outras 3 tabelas;\nA coluna que contém o ID dos usuários foi alterada para algo mais legível, foi escolhido o prefixo “U” seguido por um numeral. Como por exemplo “U1” para usuário 1;\nA ordem das colunas foi alterada para que colunas correlacionadas fiquem adjacente uma a outra;\nO resultado foi salvo na numa variável chamada “daily_data”.\n\n\n\nCode\ndaily_data &lt;- reduce(list(daily_activity,\n                          heartrate,\n                          daily_sleep,\n                          weight_log\n                          ),\n                     left_join,\n                     by = c(\"id\", \"date\")) |&gt; \n  mutate(id = as.factor(id),\n         day_of_the_week = lubridate::wday(date,\n                                           label = TRUE),\n         total_time_asleep = total_minutes_asleep/60,\n         total_time_in_bed = total_time_in_bed/60,\n         sedentary_time = sedentary_minutes/60,\n         lightly_active_time = lightly_active_minutes/60,\n         fairly_active_time = fairly_active_minutes/60,\n         very_active_time = very_active_minutes/60,\n         id = fct_relabel(id, ~ paste0('U', 1:33))\n         ) |&gt;\n  select(-c(total_minutes_asleep, sedentary_minutes, lightly_active_minutes,\n            fairly_active_minutes, very_active_minutes, log_id,\n            is_manual_report, weight_pounds, fat, logged_activities_distance)) |&gt; \n  relocate(where(is.numeric), .after = last_col())"
  },
  {
    "objectID": "posts/bellabeat/index.html#análise-e-visualização",
    "href": "posts/bellabeat/index.html#análise-e-visualização",
    "title": "Análise de uso bellabets",
    "section": "Análise e visualização",
    "text": "Análise e visualização\n\nResumo dos dados\nA tabela resultante pode ser encontrada a seguir:\n\n\nCode\nlibrary(kableExtra)\nrmarkdown::paged_table(daily_data)\n\n\n\n\n  \n\n\n\n\n\nSumário dos dados\n\n\nCode\nskim_table_numeric &lt;- daily_data |&gt;\n  skimr::skim() |&gt;\n  skimr::yank(\"numeric\")\n\nskim_table &lt;- daily_data |&gt;\n  skimr::skim() |&gt;\n  skimr::yank(\"factor\")\n\n\nkbl(skim_table) %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nid\n0\n1\nFALSE\n33\nU16: 32, U19: 32, U30: 32, U1: 31\n\n\nday_of_the_week\n0\n1\nTRUE\n7\nter: 152, qua: 150, qui: 148, sex: 126\n\n\n\n\n\n\n\n\n\n\nCode\nkbl(skim_table_numeric) %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\", full_width = T))\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ntotal_steps\n0\n1.0000000\n7652.1887593\n5086.5328318\n0.0000000\n3795.000000\n7439.0000000\n1.073400e+04\n36019.000000\n▇▇▁▁▁\n\n\ntotal_distance\n0\n1.0000000\n5.5028526\n3.9265093\n0.0000000\n2.620000\n5.2600002\n7.720000e+00\n28.030001\n▇▆▁▁▁\n\n\ntracker_distance\n0\n1.0000000\n5.4885472\n3.9092913\n0.0000000\n2.620000\n5.2600002\n7.715000e+00\n28.030001\n▇▆▁▁▁\n\n\nvery_active_distance\n0\n1.0000000\n1.5043160\n2.6576264\n0.0000000\n0.000000\n0.2200000\n2.065000e+00\n21.920000\n▇▁▁▁▁\n\n\nmoderately_active_distance\n0\n1.0000000\n0.5708802\n0.8847752\n0.0000000\n0.000000\n0.2400000\n8.050000e-01\n6.480000\n▇▁▁▁▁\n\n\nlight_active_distance\n0\n1.0000000\n3.3492577\n2.0465053\n0.0000000\n1.950000\n3.3800001\n4.790000e+00\n10.710000\n▆▇▆▁▁\n\n\nsedentary_active_distance\n0\n1.0000000\n0.0016013\n0.0073350\n0.0000000\n0.000000\n0.0000000\n0.000000e+00\n0.110000\n▇▁▁▁▁\n\n\ncalories\n0\n1.0000000\n2307.5079533\n720.8155219\n0.0000000\n1829.500000\n2140.0000000\n2.796500e+03\n4900.000000\n▁▆▇▃▁\n\n\nheartrate\n608\n0.3552492\n78.5616027\n10.6407569\n59.3771747\n70.444364\n77.4391427\n8.490179e+01\n109.789625\n▆▇▇▃▁\n\n\ntotal_sleep_records\n530\n0.4379639\n1.1186441\n0.3455207\n1.0000000\n1.000000\n1.0000000\n1.000000e+00\n3.000000\n▇▁▁▁▁\n\n\ntotal_time_in_bed\n530\n0.4379639\n7.6439871\n2.1183601\n1.0166667\n6.716667\n7.7166667\n8.766667e+00\n16.016667\n▁▃▇▁▁\n\n\nweight_kg\n876\n0.0710498\n72.0358214\n13.9232063\n52.5999985\n61.400002\n62.5000000\n8.505000e+01\n133.500000\n▇▃▃▁▁\n\n\nbmi\n876\n0.0710498\n25.1852238\n3.0669626\n21.4500008\n23.959999\n24.3899994\n2.556000e+01\n47.540001\n▇▁▁▁▁\n\n\ntotal_time_asleep\n530\n0.4379639\n6.9911219\n1.9724113\n0.9666667\n6.016667\n7.2166667\n8.166667e+00\n13.266667\n▁▂▇▃▁\n\n\nsedentary_time\n0\n1.0000000\n16.5058855\n5.0210412\n0.0000000\n12.150000\n17.6166667\n2.048333e+01\n24.000000\n▁▁▇▅▇\n\n\nlightly_active_time\n0\n1.0000000\n3.2170908\n1.8218078\n0.0000000\n2.116667\n3.3166667\n4.400000e+00\n8.633333\n▅▇▇▃▁\n\n\nfairly_active_time\n0\n1.0000000\n0.2271474\n0.3333458\n0.0000000\n0.000000\n0.1166667\n3.166667e-01\n2.383333\n▇▁▁▁▁\n\n\nvery_active_time\n0\n1.0000000\n0.3539943\n0.5491044\n0.0000000\n0.000000\n0.0666667\n5.333333e-01\n3.500000\n▇▁▁▁▁\n\n\n\n\n\n\n\n\nAtravés do pacote skimr podemos gerar um relatório detalhado das variáveis da tabela resultante. Feito isso, podemos observar o seguinte:\n\na distância ativa média diária é de 5,5 km diários;\na média de passos diários é de 7652 passos por dia;\nusuários queimam em média 2308 calorias por dia;\na média de frequência cardíaca é de 78 batimentos;\na média do índice de massa corporal é de 25,2;\nusuários dormem em média, aproximadamente, 7 hora por dia;\no tempo médio de sedentário dos usuários é de 16,5 horas.\n\nCom os dados extraídos acima observamos que o tempo sedentário entre os usuários é alto e por mais que a média de sono dos usuários seja de 7 horas, os valores variam muito entre o valor mínimo de 1 hora e máximo de 13,3 horas diárias. Podemos analisar mais afundo e ver se há alguma variação entre esses achados com a queima de caloria, índice de massa corporal e outras variáveis.\n\n\nCode\ndaily_data_long &lt;- daily_data |&gt;\n  select(\n    id,\n    date,\n    day_of_the_week,\n    light_active_distance,\n    sedentary_active_distance,\n    moderately_active_distance,\n    very_active_distance\n  ) |&gt;\n  pivot_longer(\n    !c(id, date, day_of_the_week),\n    names_to = \"activities_type\",\n    values_to = \"activities_dist\"\n  ) |&gt;\n  mutate(\n    activities_type = as.ordered(activities_type),\n    activities_type = fct_recode(\n      activities_type,\n      Sedentário = \"sedentary_active_distance\",\n      Leve = \"light_active_distance\",\n      Moderada = \"moderately_active_distance\",\n      Intensa = \"very_active_distance\"\n    ),\n    activities_type  = fct_relevel(\n      activities_type,\n      \"Sedentário\",\n      \"Leve\"\n    )\n  )\n\n\ndaily_data_long &lt;- daily_data |&gt;\n  select(\n    id,\n    date,\n    calories,\n    heartrate,\n    weight_kg,\n    bmi,\n    total_steps,\n    day_of_the_week,\n    sedentary_time,\n    lightly_active_time,\n    fairly_active_time,\n    very_active_time\n    \n  ) |&gt;\n  pivot_longer(\n    !c(id, date, day_of_the_week, calories, heartrate, weight_kg, bmi, total_steps),\n    names_to = \"activities_type\",\n    values_to = \"activities_time\"\n  ) |&gt;\n  mutate(\n    activities_type = as.ordered(activities_type),\n    activities_type = fct_recode(\n      activities_type,\n      Sedentário = \"sedentary_time\",\n      Leve = \"lightly_active_time\",\n      Moderada = \"fairly_active_time\",\n      Intensa = \"very_active_time\"\n    ),\n    activities_type  = fct_relevel(\n      activities_type,\n      \"Sedentário\",\n      \"Leve\"\n    )\n  ) |&gt; \n  right_join(daily_data_long, by = c(\"id\" = \"id\",\n                          \"date\" = \"date\",\n                          \"day_of_the_week\" = \"day_of_the_week\",\n                          \"activities_type\" = \"activities_type\"\n                          )\n            )\n\n\nPrimeiramente realizamos a comparação entre a distância ativa percorrida e tempo por tipo de atividade, ambos em relação ao dia da semana. Podemos observar que os dias mais ativos são terça, quarta e quinta. Bem como que por mais que atividades leves, moderadas e intensas sejam a menor parte do dia, são responsáveis por virtualmente 100% do tempo ativo dos usuários.\n\n\nCode\n# \nplot1 &lt;- ggplot(daily_data_long) +\n  geom_col(aes(x = day_of_the_week, y = activities_dist,\n               color = activities_type, fill = activities_type))+\n  labs(\n    x = \"Dia da semana\",\n    y = \"Distância total (km)\",\n  )\n\nplot2 &lt;-  ggplot(daily_data_long) +\n  geom_col(aes(x = day_of_the_week, y = activities_time,\n               color = activities_type, fill = activities_type))+\n  labs(\n    x = \"Dia da semana\",\n    y = \"Tempo (h)\",\n  )\n\n\npatchwork1 &lt;- plot1 + plot2 + plot_layout(guides='collect') & scale_color_viridis_d(aes(label = \"Atividade\")) &\nscale_fill_viridis_d(aes(label = \"Atividade\")) &\ntheme(legend.position='bottom')\n\npatchwork1 + plot_annotation(\n  title = \"Distância ativa percorrida e Tempo ativo por dia da semana\",\n  subtitle = \"Extratificado pela intensidade da atividade\",\n  caption = \"Período analisado de 12/04/2016 à 12/05/2016\\n\n    Fonte: kaggle\"\n)\n\n\n\n\n\n\n\n\n\nNo gráfico abaixo temos a relação entre a distância ativa percorrida e o tempo por atividade. Conseguimos confirmar que por mais que o usuários passem muito tempo sedentários esse tempo não contribui na distância ativa percorrida por dia, também podemos observar que a relação entre distância ativa e tempo de atividade vai crescendo com a intensidade da atividade.\n\n\n\n\n\n\n\n\n\nAbaixo temos a relação entre tempo da atividade em relação a queima de calorias diárias. verificamos que há uma relação inversa entre o tempo sedentário e a queima de calorias, em contrapartida queima de calorias tem uma relação positiva com a intensidade da atividade.\n\n\n\n\n\n\n\n\n\nDa mesma forma há uma relação negativa com o tempo sedentário e a quantidade de passos diários totais entre os usuários e uma relação positiva entre a intensidade da atividade com a quantidade de passos diários. Em média, quanto mais sedentário um usuário permanece, menos calorias são gastas e passos são dados durante o dia.\n\n\nCode\nplot5 &lt;- daily_data_long |&gt; \n  ggplot() +\n  geom_point(aes(x = activities_time, y = total_steps,\n                 color = activities_type, fill = activities_type))+\n  geom_smooth(aes(x = activities_time, y = total_steps), method = \"lm\")+\n  scale_color_viridis_d(aes(label = \"Atividade\")) +\n  scale_fill_viridis_d(aes(label = \"Atividade\")) +\n  facet_wrap(vars(activities_type))+\n  labs(\n    x = \"Tempo (h)\",\n    y = \"Total de passos diários\",\n    title = \"Tempo por atividade em relação ao total de passos diários\",\n    subtitle = \"Extratificado pela intensidade da atividade\",\n    caption = \"Período analisado de 12/04/2016 à 12/05/2016\\n\n    Fonte: kaggle\"\n  ) +\n  theme(legend.position='bottom')\n\nplot5\n\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\nsleep_data &lt;- daily_data |&gt;\n  select(\n    id,\n    date,\n    total_distance,\n    total_steps,\n    calories,\n    heartrate,\n    weight_kg,\n    bmi,\n    total_time_asleep,\n    total_time_in_bed\n  ) |&gt;\n  #drop_na() |&gt; \n  with_groups(\n    c(id, date),\n    mutate,\n    total_time_in_bed = (total_time_in_bed - total_time_asleep),\n    range_sleep = case_when(\n      total_time_asleep &lt; 6 ~ \"Menos de 6 horas\",\n      total_time_asleep &gt;= 6 &\n        total_time_asleep &lt;= 10 ~ \"Entre 6 e 10 horas\",\n      total_time_asleep &gt; 10 ~ \"Mais de 10 horas\"\n    ),\n    range_sleep = factor(range_sleep),\n    range_sleep = fct_relevel(range_sleep,\n                              \"Menos de 6 horas\",\n                              \"Entre 6 e 10 horas\",\n                              \"Mais de 10 horas\"\n                              )\n  )\n\n\nAnalisando a relação do quantidade de horas dormidas e os passos diários observamos que usuários que dormem menos de 6 horas diários tendem a queimar menos calorias que usuários dormem de 6 a 10 horas por dia. Observamos também que a relação entre queima de calorias e passos diários não é tão forte entre os usuários que dormem mais de 10 horas diárias, contudo isso pode se dar pela baixa quantidade de usuários nessa faixa de sono o que requer dados adicionais para chegarmos a uma conclusão dessa faixa de usuários. Com os dados disponíveis podemos ver que a relação anterior entre passos diários e queima de calorias é quebrado, fazendo que mesmo que os usuários sejam ativo durante o dia a queima de caloria é diminuída em relação as usuários que tem ua boa relação com as hora de sono.\n\n\nCode\nplot6 &lt;- sleep_data |&gt; \n  select(-c(heartrate, weight_kg, bmi)) |&gt; \n  drop_na() |&gt; \n  ggplot() +\n  geom_point(aes(x = total_steps, y = calories,\n                 color = range_sleep, fill = range_sleep))+\n  geom_smooth(aes(x = total_steps, y = calories), method = \"lm\")+\n  scale_color_viridis_d(aes(label = \"Duração do sono\")) +\n  scale_fill_viridis_d(aes(label = \"Duração do sono\")) +\n  facet_wrap(vars(range_sleep))+\n  labs(\n    x = \"Total de passos\",\n    y = \"Total de calorias\",\n    title = \"Total de passos diários vs total de calorias gastas\",\n    subtitle = \"Extratificado pelo quantidade de horas dormidas\",\n    caption = \"Período analisado de 12/04/2016 à 12/05/2016\\n\n    Fonte: kaggle\"\n  ) +\n  theme(legend.position='none')\n\nplot6\n\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\n\n\n\n\nFazendo um paralelo entre as duração do sono e o média de batimentos cardíacos vemos que usuários que dormem menos de 6 horas diárias tendem a ter uma média batimentos cardíacos mais elevados do que usuários de dormem de 6 à 10 horas diárias. Uma boa noite de sono, ao que indicam os dados podem ajudar a evitar possível doenças cardíacas em pessoas com pré disposição a isso.\n\n\nCode\nsleep_data |&gt;\n  select(range_sleep, heartrate) |&gt;\n  drop_na(range_sleep) |&gt;\n  ggplot(aes(x = range_sleep, y = heartrate, color = range_sleep)) +\n  geom_boxplot() +\n  geom_jitter(alpha=0.2) +\n  scale_color_viridis_d(aes(label = \"Frequência cardíaca média\"))+\n  labs(\n    x = NULL,\n    y = \"Frequência cardiáca\",\n    title = \"Média da frequência cardiaca em relação as horas dormidas diárias\",\n    caption = \"Período analisado de 12/04/2016 à 12/05/2016\\n\n    Fonte: kaggle\"\n  ) +\n  theme(legend.position='none')"
  },
  {
    "objectID": "posts/bellabeat/index.html#resumos-do-análise",
    "href": "posts/bellabeat/index.html#resumos-do-análise",
    "title": "Análise de uso bellabets",
    "section": "Resumos do análise",
    "text": "Resumos do análise\nAnalisando os dados encontramos as seguintes relações:\n\nquanto mais tempo um usuário permanece sedentário menos passos/calorias esse usuário percorre/gasta durante o dia;\na relação entre passos diários, bem como calorias gastas, e o tempo da atividade é positiva e essa relação tende a aumentar com a intensidade da atividade;\nusuários que dormem menos de 6 horas por dia tentem a gastar, em média, menos calorias por dia;\nusuários que dormem menos de 6 horas tendem a ter a frequência cardíaca maior que usuários que dormem de 6 a 10 horas por dia."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yet Another Data Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nHow Does a Bike-Share Navigate Speedy Success?\n\n\n\n\n\n\n\ndata visualization\n\n\nR\n\n\ndata analysis\n\n\n\n\nProject developed for the acquisition of the professional certificate in data analysis, through the Coursera platform, under the instruction of Google. In it were collected, over 12 months, data about the users who subscribe to the service offered by the Bikeshare company and individual users, in order to identify the difference between the two groups in terms of how the service is used, with a view to developing recommendations for the company’s marketing team.\n\n\n\n\n\n\nSep 18, 2021\n\n\nTales Gomes\n\n\n\n\n\n\n  \n\n\n\n\nAnálise de uso bellabets\n\n\n\n\n\n\n\ndata visualization\n\n\nR\n\n\ndata analysis\n\n\n\n\nNeste projeto procuro encontrar tendências de uso em um banco de dados que contém dados de 33 usuários, provenientes do Fitibit, um fitness tracker da Bellabeats.\n\n\n\n\n\n\nSep 10, 2021\n\n\nTales Gomes\n\n\n\n\n\n\nNo matching items"
  }
]