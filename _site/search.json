[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJun 8, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJun 5, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\ndata visualization\n\n\nR\n\n\ndata analysis\n\n\n\n\nProject developed for the acquisition of the professional certificate in data analysis, through the Coursera platform, under the instruction of Google. In it were collected, over 12 months, data about the users who subscribe to the service offered by the Bikeshare company and individual users, in order to identify the difference between the two groups in terms of how the service is used, with a view to developing recommendations for the company’s marketing team.\n\n\n\n\n\n\nSep 18, 2021\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! My name is Tales Gomes a Computer Engineer from Brazil 🇧🇷.\nI’m a data analyst certified by Datacamp."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\n\n\n\nReusehttps://creativecommons.org/licenses/by-sa/4.0/"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html",
    "href": "posts/bike-share-navigate/index.html",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "",
    "text": "You are a junior data analyst working in the marketing analyst team at Cyclistic, a bike-share company in Chicago. The director of marketing believes the company’s future success depends on maximizing the number of annual memberships. Therefore, your team wants to understand how casual riders and annual members use Cyclistic bikes differently. From these insights, your team will design a new marketing strategy to convert casual riders into annual members. But first, Cyclistic executives must approve your ecommendations, so they must be backed up with compelling data insights and professional data visualizations."
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#ask-phase",
    "href": "posts/bike-share-navigate/index.html#ask-phase",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Ask Phase",
    "text": "Ask Phase\nGuiding questions\n\nWhat is the problem you are trying to solve?\n\nHow do annual members and casual riders use Cyclistic bikes differently?\nWhy would casual riders buy Cyclistic annual memberships?\nHow can Cyclistic use digital media to influence casual riders to become members?\n\nHow can your insights drive business decisions?\n\nimprove the marketing campaign\n\nIdentify the business task\n\nUndertand the diferente between casual users and members to improve the marketing campaign\n\nConsider key stakeholders\n\nMain stakeholders:\n\nCyclistic executive team\nLily Moreno\n\nSecundary stakeholder:\n\nCyclistic marketing analytics team leader"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#prepare",
    "href": "posts/bike-share-navigate/index.html#prepare",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Prepare",
    "text": "Prepare\n\nWhere is your data located?\n\nCyclistic bikeshare database\n\nHow is the data organized?\n\nthe data base is organized in 12 files with month data from july 2020 to june 2021.\n\nAre there issues with bias or credibility in this data?\n\nReliable -Yes, the data is reliable. The data is a primary source data based on a fictional company.\nOriginal - Yes, the original public data can be located.\nComprehensive - Yes, no vital information is missing.\nCurrent - Yes, the data base is updated monyhly.\n\nHow are you addressing licensing, privacy, security, and accessibility?\n\nthe data is distributed in this license.\n\nHow did you verify the data’s integrity?\n\nUsing R (ver. 4.1) and Rstudio (ver. 1.4)\n\nHow does it help you answer your question?\n\nR is a powerful tool that makes it easy to manipulate large databases.\n\nAre there any problems with the data?\n\nYes, Some missing values, but it did not interfere with the analysis."
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#process-phases",
    "href": "posts/bike-share-navigate/index.html#process-phases",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Process Phases",
    "text": "Process Phases\n\nIngesting the data\n\nIngesting the data using the vroom library and loading into the bikeshare_data.\n\n\n\nCode\nlibrary(tidyverse) # used to filter the data\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(lubridate) #used to work with date class. \n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nCode\nlibrary(Hmisc)\n\n\nCarregando pacotes exigidos: lattice\n\n\nCarregando pacotes exigidos: survival\n\n\nCarregando pacotes exigidos: Formula\n\n\n\nAttaching package: 'Hmisc'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\n\nCode\nlibrary(kableExtra)\n\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\nCode\n#loding the files name and \nfiles <- fs::dir_ls(path = \"database/\")\nfiles\n\n\ndatabase/202007-divvy-tripdata.csv database/202008-divvy-tripdata.csv \ndatabase/202009-divvy-tripdata.csv database/202010-divvy-tripdata.csv \ndatabase/202011-divvy-tripdata.csv database/202012-divvy-tripdata.csv \ndatabase/202101-divvy-tripdata.csv database/202102-divvy-tripdata.csv \ndatabase/202103-divvy-tripdata.csv database/202104-divvy-tripdata.csv \ndatabase/202105-divvy-tripdata.csv database/202106-divvy-tripdata.csv \n\n\nCode\nbikeshare_data <- vroom::vroom(files,\n                               col_names = TRUE)\n\n\nRows: 4460151 Columns: 13\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (7): ride_id, rideable_type, start_station_name, start_station_id, end_...\ndbl  (4): start_lat, start_lng, end_lat, end_lng\ndttm (2): started_at, ended_at\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nglimpse(bikeshare_data)\n\n\nRows: 4,460,151\nColumns: 13\n$ ride_id            <chr> \"762198876D69004D\", \"BEC9C9FBA0D4CF1B\", \"D2FD8EA432…\n$ rideable_type      <chr> \"docked_bike\", \"docked_bike\", \"docked_bike\", \"docke…\n$ started_at         <dttm> 2020-07-09 15:22:02, 2020-07-24 23:56:30, 2020-07-…\n$ ended_at           <dttm> 2020-07-09 15:25:52, 2020-07-25 00:20:17, 2020-07-…\n$ start_station_name <chr> \"Ritchie Ct & Banks St\", \"Halsted St & Roscoe St\", …\n$ start_station_id   <chr> \"180\", \"299\", \"329\", \"181\", \"268\", \"635\", \"113\", \"2…\n$ end_station_name   <chr> \"Wells St & Evergreen Ave\", \"Broadway & Ridge Ave\",…\n$ end_station_id     <chr> \"291\", \"461\", \"156\", \"94\", \"301\", \"289\", \"140\", \"31…\n$ start_lat          <dbl> 41.90687, 41.94367, 41.93259, 41.89076, 41.91172, 4…\n$ start_lng          <dbl> -87.62622, -87.64895, -87.63643, -87.63170, -87.626…\n$ end_lat            <dbl> 41.90672, 41.98404, 41.93650, 41.91831, 41.90799, 4…\n$ end_lng            <dbl> -87.63483, -87.66027, -87.64754, -87.63628, -87.631…\n$ member_casual      <chr> \"member\", \"member\", \"casual\", \"casual\", \"member\", \"…\n\n\n\n\nVerifing missing values\n\n\nCode\nbikeshare_data |>\n  is.na() |>\n  colSums()\n\n\n           ride_id      rideable_type         started_at           ended_at \n                 0                  0                  0                  0 \nstart_station_name   start_station_id   end_station_name     end_station_id \n            282068             282694             315109             315570 \n         start_lat          start_lng            end_lat            end_lng \n                 0                  0               5286               5286 \n     member_casual \n                 0 \n\n\nThe missing data are grouped at the location variable (station name, latitude and longitude)\n\n\nfiltering the data\n\nFiltering and Process the data using the tools in the tidyverse.\n\nIn this fase we created the following variables:\n\ntrip_duration - the trip duration in minutes;\nweekday_day - The day of the week the trip takes place;\nis_weekend - Test if the day is a weekend;\ndate_month - Stores the month the trip takes place;\ndate_hour - Stores the hour the trip takes place;\ndate_season - Stores the season of the year;\nday_time - Stores the time of the day;\ntrip_route - Stores the route of the trip (start station to end station).\n\nThen we keep the following variable:\n\nstart_station_name;\nride_id;\nrideable_type;\nand member_casual.\n\nthe we exclude the remaning original variables.\nthen we change the class of the categorical variables to factor.\nAnd finally, we filter the data to contain only trip duration longer than 0 minutes.\n\n\nI chose not to exclude missing values due to being limited to location variables (station names and geographic markers), as well as excluding trips shorter than two minutes to minimize data collection errors.\n\n\nCode\n#Filterring data.\nbikeshare_data <- bikeshare_data |>\n  mutate(trip_duration = as.numeric(ended_at - started_at)/60, \n         weekday_day = wday(started_at, label = TRUE), \n         is_weekend = ifelse((wday(started_at)==7 | \n                              wday(started_at)==1), \"yes\", \"no\"), \n         date_month = month(started_at, label = TRUE), \n         date_hour = hour(started_at), \n         date_season = case_when( \n           month(started_at) == 1 | month(started_at) == 2 | month(started_at) == 3 ~ \"winter\",\n           month(started_at) == 4 | month(started_at) == 5 | month(started_at) == 6 ~ \"spring\",\n           month(started_at) == 7 | month(started_at) == 8 | month(started_at) == 9 ~ \"summer\",\n           month(started_at) == 10 | month(started_at) == 11 | month(started_at) == 12 ~ \"fall\"),\n         day_time = case_when( \n           hour(started_at) < 6 ~ \"dawn\",\n           hour(started_at) >=6 & hour(started_at) < 12 ~ \"morning\",\n           hour(started_at) >= 12 & hour(started_at) < 18 ~ \"afternoon\",\n           hour(started_at) >= 18 ~ \"night\"),\n         trip_route = str_c(start_station_name, end_station_name, sep = \" to \")) |> \n  relocate(start_station_name, .before = trip_route) |> \n  select(-(started_at:end_lng)) |> \n  mutate(is_weekend = factor(is_weekend,\n                             levels = c(\"yes\", \"no\"),\n                             ordered = TRUE),\n         rideable_type = factor(rideable_type,\n                                levels = c(\"docked_bike\", \"electric_bike\", \"classic_bike\"),\n                                ordered = TRUE),\n         member_casual = factor(member_casual,\n                                levels = c(\"member\", \"casual\"),\n                                ordered = TRUE),\n         date_season = factor(date_season,\n                              levels = c(\"winter\", \"spring\", \"summer\", \"fall\"),\n                              ordered = TRUE),\n         date_hour = factor(date_hour,\n                            levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n                                       12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23),\n                            ordered = TRUE),\n         day_time = factor(day_time, levels = c(\"dawn\", \"morning\", \"afternoon\", \"night\"),\n                           ordered = TRUE)) |>\n  filter(trip_duration > 2) # Only taking in account trips Higher than 2 minutes\n\n\n\nChecking the data\n\n\n\nCode\nglimpse(bikeshare_data)\n\n\nRows: 4,335,006\nColumns: 12\n$ ride_id            <chr> \"762198876D69004D\", \"BEC9C9FBA0D4CF1B\", \"D2FD8EA432…\n$ rideable_type      <ord> docked_bike, docked_bike, docked_bike, docked_bike,…\n$ member_casual      <ord> member, member, casual, casual, member, casual, mem…\n$ trip_duration      <dbl> 3.833333, 23.783333, 7.250000, 20.933333, 5.133333,…\n$ weekday_day        <ord> qui, sex, qua, sex, sáb, ter, qui, seg, qui, seg, s…\n$ is_weekend         <ord> no, no, no, no, yes, no, no, no, no, no, no, no, no…\n$ date_month         <ord> jul, jul, jul, jul, jul, jul, jul, jul, jul, jul, j…\n$ date_hour          <ord> 15, 23, 19, 19, 10, 16, 11, 16, 11, 18, 15, 18, 9, …\n$ date_season        <ord> summer, summer, summer, summer, summer, summer, sum…\n$ day_time           <ord> afternoon, night, night, night, morning, afternoon,…\n$ start_station_name <chr> \"Ritchie Ct & Banks St\", \"Halsted St & Roscoe St\", …\n$ trip_route         <chr> \"Ritchie Ct & Banks St to Wells St & Evergreen Ave\"…"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#analyse-phase",
    "href": "posts/bike-share-navigate/index.html#analyse-phase",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Analyse Phase",
    "text": "Analyse Phase\n\nFirst, we analyze the data broadly to see patterns, then group it by user type to see differences.\n\n\n\nCode\n#Using Hmisc package\n\nbikeshare_summary <- bikeshare_data |>\n  select(-c(ride_id, start_station_name, trip_route)) |>\n  describe(descript = \"Statistical Description Summary\", tabular = TRUE)\n\nhtml(bikeshare_summary, exclude1=TRUE, align= \"c\", scroll = TRUE, rows = 50)\n\n\n\n  \n\n\n Statistical Description Summary  9  Variables   4335006  Observations  rideable_type \n \n nmissingdistinct\n 433500603\n \n  Value        docked_bike electric_bike  classic_bike\n Frequency        1998627       1089217       1247162\n Proportion         0.461         0.251         0.288\n \n  member_casual \n \n nmissingdistinct\n 433500602\n \n  Value       member  casual\n Frequency  2447344 1887662\n Proportion   0.565   0.435\n \n  trip_duration \n \n nmissingdistinctInfoMeanGmd.05.10.25.50.75.90.95\n 4335006026642126.9731.23 3.767 4.917 7.96714.08325.63344.71769.700\n \n \n \n lowest :    2.016667    2.033333    2.050000    2.066667    2.083333\n highest:52701.38333353921.60000054283.35000055691.68333355944.150000\n \n  weekday_day \n \n nmissingdistinct\n 433500607\n \n lowest : dom seg ter qua qui ,  highest: ter qua qui sex sáb  Value         dom    seg    ter    qua    qui    sex    sáb\n Frequency  671449 531050 552165 587617 560207 637677 794841\n Proportion  0.155  0.123  0.127  0.136  0.129  0.147  0.183\n \n  is_weekend \n \n nmissingdistinct\n 433500602\n \n  Value          yes      no\n Frequency  1466290 2868716\n Proportion   0.338   0.662\n \n  date_month \n \n nmissingdistinct\n 4335006012\n \n lowest : jan fev mar abr mai ,  highest: ago set out nov dez  Value         jan    fev    mar    abr    mai    jun    jul    ago    set    out\n Frequency   93893  48012 222701 328578 516940 709441 540120 604137 516748 375308\n Proportion  0.022  0.011  0.051  0.076  0.119  0.164  0.125  0.139  0.119  0.087\n                         \n Value         nov    dez\n Frequency  251678 127450\n Proportion  0.058  0.029\n \n  date_hour \n \n nmissingdistinct\n 4335006024\n \n lowest : 0  1  2  3  4  ,  highest: 19 20 21 22 23  date_season \n \n nmissingdistinct\n 433500604\n \n  Value       winter  spring  summer    fall\n Frequency   364606 1554959 1661005  754436\n Proportion   0.084   0.359   0.383   0.174\n \n  day_time \n \n nmissingdistinct\n 433500604\n \n  Value           dawn   morning afternoon     night\n Frequency     161392    968698   1988751   1216165\n Proportion     0.037     0.223     0.459     0.281\n \n  \n\n\n\n\nCode\nsize <- nrow(bikeshare_data)\n\nbikeshare_data |>\n  group_by(date_hour) |>\n  summarise(percent = round((n() / size) * 100, 2)) |>\n  arrange(desc(percent)) |>\n  kable(caption = \"Total percent usage by the hour of the day\") |> \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE,\n    \n    position = \"center\",\n    fixed_thead = TRUE\n  )|>\n  scroll_box(width = \"100%\", height = \"500px\")\n\n\n\n\nTotal percent usage by the hour of the day\n \n  \n    date_hour \n    percent \n  \n \n\n  \n    17 \n    10.24 \n  \n  \n    18 \n    9.01 \n  \n  \n    16 \n    8.57 \n  \n  \n    15 \n    7.34 \n  \n  \n    14 \n    6.75 \n  \n  \n    19 \n    6.66 \n  \n  \n    13 \n    6.58 \n  \n  \n    12 \n    6.40 \n  \n  \n    11 \n    5.39 \n  \n  \n    20 \n    4.56 \n  \n  \n    10 \n    4.21 \n  \n  \n    8 \n    3.88 \n  \n  \n    9 \n    3.61 \n  \n  \n    7 \n    3.35 \n  \n  \n    21 \n    3.21 \n  \n  \n    22 \n    2.64 \n  \n  \n    23 \n    1.98 \n  \n  \n    6 \n    1.91 \n  \n  \n    0 \n    1.27 \n  \n  \n    1 \n    0.82 \n  \n  \n    5 \n    0.68 \n  \n  \n    2 \n    0.46 \n  \n  \n    3 \n    0.25 \n  \n  \n    4 \n    0.24 \n  \n\n\n\n\n\n\nAnalyzing the data generated by the “describe” function we can infer that:\n\nRegarding the type of bikes, “classic_bike” is more than 41% of all trips, followed by “eletric_bike” with 31% and “docked_bike” with 28%;\nRegarding to the type of user, “member” represents 55% while “casual” represents 45%;\nRegarding to the day, “weekend” represents 33% of the races with a peak on Saturday and a minimum on Monday;\nRegarding the time of day, it can be observed that the peak occurs at 17, 18 and 16 hours. The races decrease from afternoon, night, morning, until dawn.\nRegarding to the month and season, the values decrease from summer,fall, spring to winter. With the busiest months being August, July, September and Octuber and the least busy months being February, January and March;\nRegarding to the duration of the trip, the average duration is 24.26 minutes.\n\n\n\n\nCode\nbikeshare_skim_member <- bikeshare_data |> \n  select(-c(ride_id, start_station_name, trip_route)) |>\n  group_by(member_casual) |> \n  skimr::skim() |>\n  as_tibble()\n  \n\nbikeshare_skim_member |>\n  skimr::yank(\"numeric\") |>\n  as_tibble() |>\n  kable(caption = \"Trip duration difference between Casual users and members\") |> \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), \n    full_width = FALSE,\n    position = \"center\",\n    fixed_thead = TRUE\n  )\n\n\n\n\nTrip duration difference between Casual users and members\n \n  \n    skim_variable \n    member_casual \n    n_missing \n    complete_rate \n    mean \n    sd \n    p0 \n    p25 \n    p50 \n    p75 \n    p100 \n    hist \n  \n \n\n  \n    trip_duration \n    member \n    0 \n    1 \n    15.59300 \n    56.60104 \n    2.016667 \n    6.566667 \n    11.13333 \n    19.13333 \n    33421.37 \n    ▇▁▁▁▁ \n  \n  \n    trip_duration \n    casual \n    0 \n    1 \n    41.72614 \n    364.67240 \n    2.016667 \n    11.033333 \n    19.70000 \n    37.00000 \n    55944.15 \n    ▇▁▁▁▁ \n  \n\n\n\n\n\n\n\nCode\nbikeshare_skim_member |>\n  skimr::yank(\"factor\") |>\n  as_tibble() |>\n  kable(caption = \"Behavior difference of Members and Casual users\") |> \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"), \n    full_width = FALSE, \n    position = \"center\",\n    fixed_thead = TRUE\n  )|>\n    scroll_box(width = \"100%\", height = \"500px\")\n\n\n\n\nBehavior difference of Members and Casual users\n \n  \n    skim_variable \n    member_casual \n    n_missing \n    complete_rate \n    ordered \n    n_unique \n    top_counts \n  \n \n\n  \n    rideable_type \n    member \n    0 \n    1 \n    TRUE \n    3 \n    doc: 1043233, cla: 801776, ele: 602335 \n  \n  \n    rideable_type \n    casual \n    0 \n    1 \n    TRUE \n    3 \n    doc: 955394, ele: 486882, cla: 445386 \n  \n  \n    weekday_day \n    member \n    0 \n    1 \n    TRUE \n    7 \n    qua: 376862, sáb: 364031, sex: 362687, ter: 352671 \n  \n  \n    weekday_day \n    casual \n    0 \n    1 \n    TRUE \n    7 \n    sáb: 430810, dom: 359087, sex: 274990, qua: 210755 \n  \n  \n    is_weekend \n    member \n    0 \n    1 \n    TRUE \n    2 \n    no: 1770951, yes: 676393 \n  \n  \n    is_weekend \n    casual \n    0 \n    1 \n    TRUE \n    2 \n    no: 1097765, yes: 789897 \n  \n  \n    date_month \n    member \n    0 \n    1 \n    TRUE \n    12 \n    jun: 347389, ago: 321421, set: 291435, jul: 274564 \n  \n  \n    date_month \n    casual \n    0 \n    1 \n    TRUE \n    12 \n    jun: 362052, ago: 282716, jul: 265556, mai: 251400 \n  \n  \n    date_hour \n    member \n    0 \n    1 \n    TRUE \n    24 \n    17: 259615, 18: 225538, 16: 209711, 15: 169696 \n  \n  \n    date_hour \n    casual \n    0 \n    1 \n    TRUE \n    24 \n    17: 184196, 18: 164941, 16: 161847, 15: 148366 \n  \n  \n    date_season \n    member \n    0 \n    1 \n    TRUE \n    4 \n    sum: 887420, spr: 807456, fal: 497998, win: 254470 \n  \n  \n    date_season \n    casual \n    0 \n    1 \n    TRUE \n    4 \n    sum: 773585, spr: 747503, fal: 256438, win: 110136 \n  \n  \n    day_time \n    member \n    0 \n    1 \n    TRUE \n    4 \n    aft: 1094519, mor: 649860, nig: 635991, daw: 66974 \n  \n  \n    day_time \n    casual \n    0 \n    1 \n    TRUE \n    4 \n    aft: 894232, nig: 580174, mor: 318838, daw: 94418 \n  \n\n\n\n\n\n\nRegarding the difference in usage between members and casual users, we can observe the following:\n\nThe trip duration is 2,45 times longer for casual users than members. Averaging 36.15 min for casual users and 14.71 min for members;\nRegarding the type of bicycle, the most used for members, in descending order, are “classic”, “eletric”, and “docked”. For casual users they are “classic”, “docked” and “eletric”;\nRegarding the time of year, both users follow the general average with a peak in summer and less use in winter, however for casual users spring is busier than fall;\nThe busiest member months are August, September and July. For casual users, the busiest months are July, August and September;\nRegarding the day of the week, the busiest days for members, in descending order, are Wednesday, Thursday and Friday. For casual users, the busiest days are Saturday, Sunday and Friday. With greater usage of the service on weekends for casual members compared to members;\nRegarding the time of day both types of users have more runs in the afternoon, however in casual members the night is busier than in the morning.\n\nThe Stations and routes more often used are the following:\n\n\n\nCode\nbikeshare_data |> \n  group_by(start_station_name) |> \n  summarise(number_of_trips = n()) |>\n  arrange(-number_of_trips) |> \n  drop_na(start_station_name) |> \n  slice(1:10) |>\n  kable(caption = \"Top 10 most popular station\") |> \n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE,\n    position = \"center\",\n    fixed_thead = TRUE\n  )\n\n\n\n\nTop 10 most popular station\n \n  \n    start_station_name \n    number_of_trips \n  \n \n\n  \n    Streeter Dr & Grand Ave \n    56823 \n  \n  \n    Lake Shore Dr & Monroe St \n    42821 \n  \n  \n    Theater on the Lake \n    38780 \n  \n  \n    Clark St & Elm St \n    37840 \n  \n  \n    Lake Shore Dr & North Blvd \n    37282 \n  \n  \n    Millennium Park \n    33622 \n  \n  \n    Michigan Ave & Oak St \n    33259 \n  \n  \n    Wells St & Concord Ln \n    32843 \n  \n  \n    Wells St & Elm St \n    29163 \n  \n  \n    Clark St & Armitage Ave \n    28876 \n  \n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(trip_route) |> \n  summarise(number_of_trips = n()) |>\n  arrange(-number_of_trips) |> \n  drop_na(trip_route) |> \n  slice(1:10) |>\n  kable(caption = \"Top 10 most popular route\") |> \n   kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE,\n    position = \"center\",\n    fixed_thead = TRUE\n  )\n\n\n\n\nTop 10 most popular route\n \n  \n    trip_route \n    number_of_trips \n  \n \n\n  \n    Streeter Dr & Grand Ave to Streeter Dr & Grand Ave \n    9484 \n  \n  \n    Lake Shore Dr & Monroe St to Lake Shore Dr & Monroe St \n    8596 \n  \n  \n    Millennium Park to Millennium Park \n    6436 \n  \n  \n    Buckingham Fountain to Buckingham Fountain \n    5775 \n  \n  \n    Michigan Ave & Oak St to Michigan Ave & Oak St \n    5563 \n  \n  \n    Indiana Ave & Roosevelt Rd to Indiana Ave & Roosevelt Rd \n    4683 \n  \n  \n    Fort Dearborn Dr & 31st St to Fort Dearborn Dr & 31st St \n    4514 \n  \n  \n    Theater on the Lake to Theater on the Lake \n    4301 \n  \n  \n    Lake Shore Dr & Monroe St to Streeter Dr & Grand Ave \n    3913 \n  \n  \n    Michigan Ave & 8th St to Michigan Ave & 8th St \n    3853"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#share-phase",
    "href": "posts/bike-share-navigate/index.html#share-phase",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Share Phase",
    "text": "Share Phase\n\nBy the hour and the time of the day\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, date_hour) |> \n  summarise(n_trip = n(), .groups = 'drop') |>\n  ggplot(aes(x= date_hour, y = n_trip, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual)) + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc()+\n  labs(\n    title = \"Number of trips by the hour of the day\",\n    color = \"Type of user\",\n    fill = \"Type of user\",\n    x = \"hour of the day\",\n    y = \"Number of trips (in Thousands)\"\n    )   \n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, date_hour) |> \n  summarise(mean_trip = mean(trip_duration), .groups = 'drop') |>\n  ggplot(aes(x= date_hour, y = mean_trip, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by he hour of the day\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"hour of the day\",\n      y = \"Trip duration (min)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, day_time) |> \n  summarise(n_trip = n(), .groups = 'drop') |>\n  ggplot(mapping = aes(day_time, n_trip)) +  \n  geom_col(aes(color = member_casual, fill = member_casual), position = \"dodge2\")+\n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(limits = c(0,2000000), n.breaks = 10,labels = scales::unit_format(unit = \"MM\", scale = 1e-6)) +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the time of the day\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"Time of the day\",\n      y = \"Number of trips (in Millions)\"\n    )   \n\n\n\n\n\n\n\n\n\n\n\nBy Month and Season\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, date_month) |> \n  summarise(n_trip = n(), .groups = 'drop') |>\n  ggplot(aes(x= date_month, y = n_trip, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual)) + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the months and type of user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"Month of the year\",\n      y = \"Number of trips (in Thousands)\"\n    )  \n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, date_month) |> \n  summarise(mean_duration = mean(trip_duration), .groups = 'drop') |>\n  ggplot(aes(x= date_month, y = mean_duration, color = member_casual, group = member_casual)) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Trip duration by the Months and type of user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"hour of the day\",\n      y = \"Trip duration (min)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, date_season) |>\n  summarise(n_trip = n(), .groups = \"drop\") |>\n  ggplot(mapping = aes(date_season, n_trip)) + \n  geom_col(aes(color = member_casual, fill = member_casual), position = \"dodge2\") +\n  scale_y_continuous(n.breaks = 10,labels = scales::unit_format(unit = \"MM\", scale = 1e-6)) +\n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by seasons and type of user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"season of the year\",\n      y = \"Number of trips (in Millions)\"\n    )  \n\n\n\n\n\n\n\n\n\n\n\nBy type of the bike\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, rideable_type) |> \n  summarise(n_trip = n(), .groups = \"drop\") |>\n  ggplot(mapping = aes(rideable_type, n_trip)) +  \n  geom_col(aes(color = member_casual, fill = member_casual), position = \"dodge2\")+\n  scale_y_continuous(n.breaks = 10,labels = scales::unit_format(unit = \"MM\", scale = 1e-6)) +\n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the type of the bike and user\",\n      color = \"Type of user\",\n      fill = \"Type of user\",\n      x = \"type of the bike\",\n      y = \"Number of trips (in Millions)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, rideable_type, date_hour) |>\n  summarise(n_trip = n(), .groups = 'drop') |>\n  ggplot(aes(x= date_hour, y = n_trip, color = rideable_type, group = interaction(member_casual, rideable_type))) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc() +\n  labs(\n      title = \"Number of trips by the hour of the day, type of bike and type of user\",\n      color = \"Type of bike\",\n      fill = \"Type of bike\",\n      x = \"hour of the day\",\n      y = \"Number of trips (in Thousands)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, rideable_type, date_hour) |> \n  summarise(mean_duration = mean(trip_duration), .groups = 'drop') |>\n  ggplot(aes(x= date_hour, y = mean_duration, color = rideable_type, group = interaction(member_casual, rideable_type))) +  \n  geom_line() +\n  geom_point() +\n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::theme_hc() +\n  labs(\n      title = \"Duration of the trips by the type of the bike\",\n      color = \"Type of bike\",\n      fill = \"Type of bike\",\n      x = \"hour of the day\",\n      y = \"Trip duration (min)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(member_casual, rideable_type, date_month) |> \n  summarise(n_trip = n(), .groups = 'drop') |>\n  ggplot(aes(x= date_month, y = n_trip, color = rideable_type, group = interaction(member_casual, rideable_type))) +  \n  geom_line() +\n  geom_point() + \n  facet_grid(rows = vars(member_casual), scales = \"free_y\") + \n  ggthemes::scale_color_tableau(palette = \"Superfishel Stone\") +\n  ggthemes::scale_fill_tableau(palette = \"Superfishel Stone\") +\n  scale_y_continuous(labels = scales::unit_format(unit = \"k\", scale = 1e-3)) +\n  ggthemes::theme_hc()+\n  labs(\n      title = \"Number of trips by the months\",\n      color = \"Type of bike\",\n      fill = \"Type of bike\",\n      x = \"Month of the year\",\n      y = \"No. of trips (in Thousands)\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nStations and the Routs more offen used\n\n\nCode\nbikeshare_data |> \n  group_by(start_station_name) |> \n  summarise(n_trip = n()) |>\n  arrange(-n_trip) |> \n  drop_na(start_station_name) |> \n  slice(1:10) |> \n  ggplot(mapping = aes(fct_reorder(start_station_name, -n_trip), n_trip)) +  \n  geom_col(aes(color = n_trip, fill = n_trip), position = \"dodge2\")+\n  coord_flip()+\n  ggthemes::scale_color_continuous_tableau(palette = \"Blue\") +\n  ggthemes::scale_fill_continuous_tableau(palette = \"Blue\") +\n  ggthemes::theme_hc()+\n\n  theme(legend.position=\"none\")+\n  labs(\n    title = \"10 most used start point\",\n    x = \"\",\n    y = \"\"\n    )   \n\n\n\n\n\n\n\n\n\n\n\nCode\nbikeshare_data |> \n  group_by(trip_route) |> \n  summarise(n_trip = n()) |>\n  arrange(-n_trip) |> \n  drop_na(trip_route) |> \n  slice(1:10) |> \n  ggplot(mapping = aes(fct_reorder(trip_route, -n_trip), n_trip)) +  \n  geom_col(aes(color = n_trip, fill = n_trip), position = \"dodge2\")+\n  coord_flip()+\n  ggthemes::scale_color_continuous_tableau(palette = \"Blue\") +\n  ggthemes::scale_fill_continuous_tableau(palette = \"Blue\") +\n  ggthemes::theme_hc()+\n  theme(legend.position=\"none\")+\n  labs(\n    title = \"Top 10 Routes\",\n    x = \"\",\n    y = \"\"\n  )"
  },
  {
    "objectID": "posts/bike-share-navigate/index.html#act",
    "href": "posts/bike-share-navigate/index.html#act",
    "title": "How Does a Bike-Share Navigate Speedy Success?",
    "section": "Act",
    "text": "Act\n\nKey findings\n\nDifferent of members, casual user use service more often during the weekend;\nAlso have the mean duration of the trips 2,45 times longer than members;\nThey have the highest trip duration during dawn (from 12 am to 5 am). With the pic at 2 am;\nCasual users use the service more from July to October;\nAlthough February is the month with the least trips, it is also the month with the longest duration of trips;\nCasual members use more docked bikes thans members and also have a longer average travel time for this type of bike.\n\n\n\nRecommendations\n\nCreate a subscription based on time-of-day to encourage casual users that ride, for exemple, from 9 pm to 5 am to subscribe;\nImplement discounts or a points system based on loyalty (frequency of use) and high trip-duration users;\nCreate seasonal subscriptions such as summer and spring. Or implement discounts on temporary subscriptions (3, 6, 9, 12 months);\nCreate subscription especific to ride on week day or on the weekend;\nCreate subscriptions for specific types of bicycles. Plans to use only docked bicycles, for example."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "Code\nprint(\"Hello World in Python!\")\n\n\nHello World in Python!\n\n\n\n\nCode\nprint(\"Hello World in R!\")\n\n\n[1] \"Hello World in R!\"\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by-sa/4.0/"
  }
]